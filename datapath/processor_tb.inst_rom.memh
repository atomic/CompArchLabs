1000000c  // [0x00400000] beq $0, $0, 48 [JUMP_FORWARD-0x00400000]; 15: beq      $zero, $zero, JUMP_FORWARD
00000000  // [0x00400004] nop                             ; 16: sll      $zero, $zero, 0                  # NOP
00854022  // [0x00400008] sub $8, $4, $5                  ; 19: sub      $t0, $a0, $a1
10080005  // [0x0040000c] beq $0, $8, 20 [PASS-0x0040000c]; 20: beq      $zero, $t0, PASS
00000000  // [0x00400010] nop                             ; 21: sll      $zero, $zero, 0
00044020  // [0x00400014] add $8, $0, $4                  ; 22: add      $t0, $zero, $a0               # store actual value to $t0
00054820  // [0x00400018] add $9, $0, $5                  ; 23: add      $t1, $zero, $a1               # store expected value to $t1
0810015a  // [0x0040001c] j 0x00400568 [FAIL]             ; 24: j        FAIL
00000000  // [0x00400020] nop                             ; 25: sll      $zero, $zero, 0
03e00008  // [0x00400024] jr $31                          ; 27: jr       $ra
00000000  // [0x00400028] nop                             ; 28: sll      $zero, $zero, 0
10000003  // [0x0040002c] beq $0, $0, 12 [MAIN-0x0040002c]; 31: beq      $zero, $zero, MAIN
00000000  // [0x00400030] nop                             ; 32: sll      $zero, $zero, 0
1000fffd  // [0x00400034] beq $0, $0, -12 [JUMP_BACK-0x00400034]; 35: beq      $zero, $zero, JUMP_BACK
00000000  // [0x00400038] nop                             ; 36: sll      $zero, $zero, 0
2004000a  // [0x0040003c] addi $4, $0, 10                 ; 41: addi     $a0, $zero, 10
2005000a  // [0x00400040] addi $5, $0, 10                 ; 42: addi     $a1, $zero, 10
0c100002  // [0x00400044] jal 0x00400008 [CHECK_ANSWER]   ; 43: jal      CHECK_ANSWER         ## test: ADDI
00000000  // [0x00400048] nop                             ; 44: sll      $zero, $zero, 0
22730001  // [0x0040004c] addi $19, $19, 1                ; 45: addi     $s3, $s3, 1                
2404fff6  // [0x00400050] addiu $4, $0, -10               ; 48: addiu    $a0, $zero, -10
2405fff6  // [0x00400054] addiu $5, $0, -10               ; 49: addiu    $a1, $zero, -10
0c100002  // [0x00400058] jal 0x00400008 [CHECK_ANSWER]   ; 50: jal      CHECK_ANSWER         ## test: ADDIU
00000000  // [0x0040005c] nop                             ; 51: sll      $zero, $zero, 0
22730001  // [0x00400060] addi $19, $19, 1                ; 52: addi     $s3, $s3, 1
24080005  // [0x00400064] addiu $8, $0, 5                 ; 55: addiu    $t0, $zero, 5
24090006  // [0x00400068] addiu $9, $0, 6                 ; 56: addiu    $t1, $zero, 6
01092020  // [0x0040006c] add $4, $8, $9                  ; 57: add      $a0, $t0, $t1
2405000b  // [0x00400070] addiu $5, $0, 11                ; 58: addiu    $a1, $zero, 11       
0c100002  // [0x00400074] jal 0x00400008 [CHECK_ANSWER]   ; 59: jal      CHECK_ANSWER         ## test : ADD
00000000  // [0x00400078] nop                             ; 60: sll      $zero, $zero, 0
22730001  // [0x0040007c] addi $19, $19, 1                ; 61: addi     $s3, $s3, 1
24080005  // [0x00400080] addiu $8, $0, 5                 ; 68: addiu    $t0, $zero, 5
24090006  // [0x00400084] addiu $9, $0, 6                 ; 69: addiu    $t1, $zero, 6
01092022  // [0x00400088] sub $4, $8, $9                  ; 70: sub      $a0, $t0, $t1
2005ffff  // [0x0040008c] addi $5, $0, -1                 ; 71: addi     $a1, $zero, -1
0c100002  // [0x00400090] jal 0x00400008 [CHECK_ANSWER]   ; 72: jal      CHECK_ANSWER          ## test : SUB
00000000  // [0x00400094] nop                             ; 73: sll      $zero, $zero, 0
26730001  // [0x00400098] addiu $19, $19, 1               ; 74: addiu    $s3, $s3, 1
2008fff6  // [0x0040009c] addi $8, $0, -10                ; 77: addi     $t0, $zero, -10
2009fff6  // [0x004000a0] addi $9, $0, -10                ; 78: addi     $t1, $zero, -10
01092022  // [0x004000a4] sub $4, $8, $9                  ; 79: sub      $a0, $t0, $t1
20050000  // [0x004000a8] addi $5, $0, 0                  ; 80: addi     $a1, $zero, 0
0c100002  // [0x004000ac] jal 0x00400008 [CHECK_ANSWER]   ; 81: jal      CHECK_ANSWER          ## test : SUBU
00000000  // [0x004000b0] nop                             ; 82: sll      $zero, $zero, 0
26730001  // [0x004000b4] addiu $19, $19, 1               ; 83: addiu    $s3, $s3, 1
08100038  // [0x004000b8] j 0x004000e0 [SKIP_SLL]         ; 87: j        SKIP_SLL
00000000  // [0x004000bc] nop                             ; 88: sll      $zero, $zero, 0
20080001  // [0x004000c0] addi $8, $0, 1                  ; 89: addi     $t0, $zero, 1
00084fc0  // [0x004000c4] sll $9, $8, 31                  ; 90: sll      $t1, $t0, 31
000857c0  // [0x004000c8] sll $10, $8, 31                 ; 91: sll      $t2, $t0, 31
012a2022  // [0x004000cc] sub $4, $9, $10                 ; 92: sub      $a0, $t1, $t2
20050000  // [0x004000d0] addi $5, $0, 0                  ; 93: addi     $a1, $zero, 0
0c100002  // [0x004000d4] jal 0x00400008 [CHECK_ANSWER]   ; 94: jal      CHECK_ANSWER         ## test : SLL
00000000  // [0x004000d8] nop                             ; 95: sll      $zero, $zero, 0 
26730001  // [0x004000dc] addiu $19, $19, 1               ; 96: addiu    $s3, $s3, 1  
240800ff  // [0x004000e0] addiu $8, $0, 255               ; 101: addiu    $t0, $zero, 0x00FF
24090f0f  // [0x004000e4] addiu $9, $0, 3855              ; 102: addiu    $t1, $zero, 0x0F0F
01092024  // [0x004000e8] and $4, $8, $9                  ; 103: and      $a0, $t0, $t1
2405000f  // [0x004000ec] addiu $5, $0, 15                ; 104: addiu    $a1, $zero, 0x000F
0c100002  // [0x004000f0] jal 0x00400008 [CHECK_ANSWER]   ; 105: jal      CHECK_ANSWER         ## test : AND
00000000  // [0x004000f4] nop                             ; 106: sll      $zero, $zero, 0
22730001  // [0x004000f8] addi $19, $19, 1                ; 107: addi     $s3, $s3, 1
240800ff  // [0x004000fc] addiu $8, $0, 255               ; 110: addiu    $t0, $zero, 0x00FF
31040f0f  // [0x00400100] andi $4, $8, 3855               ; 111: andi     $a0, $t0, 0x0F0F
2405000f  // [0x00400104] addiu $5, $0, 15                ; 112: addiu    $a1, $zero, 0x000F
0c100002  // [0x00400108] jal 0x00400008 [CHECK_ANSWER]   ; 113: jal      CHECK_ANSWER         ## test : ANDI
00000000  // [0x0040010c] nop                             ; 114: sll      $zero, $zero, 0
22730001  // [0x00400110] addi $19, $19, 1                ; 115: addi     $s3, $s3, 1
240800ff  // [0x00400114] addiu $8, $0, 255               ; 118: addiu    $t0, $zero, 0x00FF
24090f0f  // [0x00400118] addiu $9, $0, 3855              ; 119: addiu    $t1, $zero, 0x0F0F
01092025  // [0x0040011c] or $4, $8, $9                   ; 120: or       $a0, $t0, $t1
24050fff  // [0x00400120] addiu $5, $0, 4095              ; 121: addiu    $a1, $zero, 0x0FFF
0c100002  // [0x00400124] jal 0x00400008 [CHECK_ANSWER]   ; 122: jal      CHECK_ANSWER         ## test : OR
00000000  // [0x00400128] nop                             ; 123: sll      $zero, $zero, 0
22730001  // [0x0040012c] addi $19, $19, 1                ; 124: addi     $s3, $s3, 1
240800ff  // [0x00400130] addiu $8, $0, 255               ; 127: addiu    $t0, $zero, 0x00FF
35040f0f  // [0x00400134] ori $4, $8, 3855                ; 128: ori      $a0, $t0, 0x0F0F
24050fff  // [0x00400138] addiu $5, $0, 4095              ; 129: addiu    $a1, $zero, 0x0FFF
0c100002  // [0x0040013c] jal 0x00400008 [CHECK_ANSWER]   ; 130: jal      CHECK_ANSWER         ## test : ORI
00000000  // [0x00400140] nop                             ; 131: sll      $zero, $zero, 0
22730001  // [0x00400144] addi $19, $19, 1                ; 132: addi     $s3, $s3, 1
0810005d  // [0x00400148] j 0x00400174 [SKIP_NOR]         ; 136: j        SKIP_NOR
00000000  // [0x0040014c] nop                             ; 137: sll      $zero, $zero, 0
340900ff  // [0x00400150] ori $9, $0, 255                 ; 138: ori      $t1, $zero, 0x00FF
340a0f0f  // [0x00400154] ori $10, $0, 3855               ; 139: ori      $t2, $zero, 0x0F0F
012a2027  // [0x00400158] nor $4, $9, $10                 ; 140: nor      $a0, $t1, $t2
3408ffff  // [0x0040015c] ori $8, $0, -1                  ; 141: ori      $t0, $zero, 0xFFFF
00082c00  // [0x00400160] sll $5, $8, 16                  ; 142: sll      $a1, $t0, 16
34a5f000  // [0x00400164] ori $5, $5, -4096               ; 143: ori      $a1, $a1, 0xF000
0c100002  // [0x00400168] jal 0x00400008 [CHECK_ANSWER]   ; 144: jal      CHECK_ANSWER         ## test : NOR
00000000  // [0x0040016c] nop                             ; 145: sll      $zero, $zero, 0
22100001  // [0x00400170] addi $16, $16, 1                ; 146: addi     $s0, $s0, 1
240800ff  // [0x00400174] addiu $8, $0, 255               ; 151: addiu    $t0, $zero, 0x00FF
24090f0f  // [0x00400178] addiu $9, $0, 3855              ; 152: addiu    $t1, $zero, 0x0F0F
01092026  // [0x0040017c] xor $4, $8, $9                  ; 153: xor      $a0, $t0, $t1
24050ff0  // [0x00400180] addiu $5, $0, 4080              ; 154: addiu    $a1, $zero, 0x0FF0
0c100002  // [0x00400184] jal 0x00400008 [CHECK_ANSWER]   ; 155: jal      CHECK_ANSWER            ## test : XOR
00000000  // [0x00400188] nop                             ; 156: sll      $zero, $zero, 0
22730001  // [0x0040018c] addi $19, $19, 1                ; 157: addi     $s3, $s3, 1
240800ff  // [0x00400190] addiu $8, $0, 255               ; 160: addiu    $t0, $zero, 0x00FF
39040f0f  // [0x00400194] xori $4, $8, 3855               ; 161: xori     $a0, $t0, 0x0F0F
24050ff0  // [0x00400198] addiu $5, $0, 4080              ; 162: addiu    $a1, $zero, 0x0FF0
0c100002  // [0x0040019c] jal 0x00400008 [CHECK_ANSWER]   ; 163: jal      CHECK_ANSWER            ## test : XOR
00000000  // [0x004001a0] nop                             ; 164: sll      $zero, $zero, 0
22730001  // [0x004001a4] addi $19, $19, 1                ; 165: addi     $s3, $s3, 1
20080001  // [0x004001a8] addi $8, $0, 1                  ; 170: addi     $t0, $zero, 1
15000003  // [0x004001ac] bne $8, $0, 12 [BNE_PASS-0x004001ac]; 171: bne      $t0, $zero, BNE_PASS    ## test : bne
00000000  // [0x004001b0] nop                             ; 172: sll      $zero, $zero, 0
0810015a  // [0x004001b4] j 0x00400568 [FAIL]             ; 173: j        FAIL
00000000  // [0x004001b8] nop                             ; 174: sll      $zero, $zero, 0 
22730001  // [0x004001bc] addi $19, $19, 1                ; 176: addi     $s3, $s3, 1
2008ffff  // [0x004001c0] addi $8, $0, -1                 ; 178: addi     $t0, $zero, -1
05000003  // [0x004001c4] bltz $8 12 [BLTZ_PASS-0x004001c4]; 179: bltz     $t0, BLTZ_PASS          ## test : bltz
00000000  // [0x004001c8] nop                             ; 180: sll      $zero, $zero, 0
0810015a  // [0x004001cc] j 0x00400568 [FAIL]             ; 181: j        FAIL
00000000  // [0x004001d0] nop                             ; 182: sll      $zero, $zero, 0
22730001  // [0x004001d4] addi $19, $19, 1                ; 184: addi     $s3, $s3, 1
20080001  // [0x004001d8] addi $8, $0, 1                  ; 186: addi     $t0, $zero, 1
1d000003  // [0x004001dc] bgtz $8 12 [BGTZ_PASS-0x004001dc]; 187: bgtz     $t0, BGTZ_PASS          ## test : bgtz
00000000  // [0x004001e0] nop                             ; 188: sll      $zero, $zero, 0
0810015a  // [0x004001e4] j 0x00400568 [FAIL]             ; 189: j        FAIL
00000000  // [0x004001e8] nop                             ; 190: sll      $zero, $zero, 0
22730001  // [0x004001ec] addi $19, $19, 1                ; 192: addi     $s3, $s3, 1
04010003  // [0x004001f0] bgez $0 12 [BGEZ_PASS1-0x004001f0]; 194: bgez     $zero, BGEZ_PASS1       ## test  part 1: bgez
00000000  // [0x004001f4] nop                             ; 195: sll      $zero, $zero, 0
0810015a  // [0x004001f8] j 0x00400568 [FAIL]             ; 196: j        FAIL
00000000  // [0x004001fc] nop                             ; 197: sll      $zero, $zero, 0
20080001  // [0x00400200] addi $8, $0, 1                  ; 200: addi     $t0, $zero, 1
05010003  // [0x00400204] bgez $8 12 [BGEZ_PASS2-0x00400204]; 201: bgez     $t0, BGEZ_PASS2         ## test  part 2: bgez
00000000  // [0x00400208] nop                             ; 202: sll      $zero, $zero, 0
0810015a  // [0x0040020c] j 0x00400568 [FAIL]             ; 203: j        FAIL   
00000000  // [0x00400210] nop                             ; 204: sll      $zero, $zero, 0
22730001  // [0x00400214] addi $19, $19, 1                ; 206: addi     $s3, $s3, 1
20080000  // [0x00400218] addi $8, $0, 0                  ; 208: addi     $t0, $zero, 0
19000003  // [0x0040021c] blez $8 12 [BLEZ_PASS1-0x0040021c]; 209: blez     $t0, BLEZ_PASS1         ## test  part 1: blez
00000000  // [0x00400220] nop                             ; 210: sll      $zero, $zero, 0
0810015a  // [0x00400224] j 0x00400568 [FAIL]             ; 211: j        FAIL
00000000  // [0x00400228] nop                             ; 212: sll      $zero, $zero, 0
2008ffff  // [0x0040022c] addi $8, $0, -1                 ; 215: addi     $t0, $zero, -1
19000003  // [0x00400230] blez $8 12 [BLEZ_PASS2-0x00400230]; 216: blez     $t0, BLEZ_PASS2         ## test  part 2: blez
00000000  // [0x00400234] nop                             ; 217: sll      $zero, $zero, 0
0810015a  // [0x00400238] j 0x00400568 [FAIL]             ; 218: j        FAIL
00000000  // [0x0040023c] nop                             ; 219: sll      $zero, $zero, 0
22730001  // [0x00400240] addi $19, $19, 1                ; 221: addi     $s3, $s3, 1
20080001  // [0x00400244] addi $8, $0, 1                  ; 229: addi     $t0, $zero, 1
20090002  // [0x00400248] addi $9, $0, 2                  ; 230: addi     $t1, $zero, 2
0109502a  // [0x0040024c] slt $10, $8, $9                 ; 231: slt      $t2, $t0, $t1              ## test  part 1: slt
15400003  // [0x00400250] bne $10, $0, 12 [STL_PASS1-0x00400250]; 232: bne      $t2, $zero, STL_PASS1
00000000  // [0x00400254] nop                             ; 233: sll      $zero, $zero, 0
0810015a  // [0x00400258] j 0x00400568 [FAIL]             ; 234: j        FAIL
00000000  // [0x0040025c] nop                             ; 235: sll      $zero, $zero, 0
0128502a  // [0x00400260] slt $10, $9, $8                 ; 238: slt      $t2, $t1, $t0              ## test  part 2: slt
11400003  // [0x00400264] beq $10, $0, 12 [STL_PASS2-0x00400264]; 239: beq      $t2, $zero, STL_PASS2
00000000  // [0x00400268] nop                             ; 240: sll      $zero, $zero, 0
0810015a  // [0x0040026c] j 0x00400568 [FAIL]             ; 241: j        FAIL
00000000  // [0x00400270] nop                             ; 242: sll      $zero, $zero, 0
22730001  // [0x00400274] addi $19, $19, 1                ; 244: addi     $s3, $s3, 1
20080001  // [0x00400278] addi $8, $0, 1                  ; 248: addi     $t0, $zero, 1
20090002  // [0x0040027c] addi $9, $0, 2                  ; 249: addi     $t1, $zero, 2
0109502b  // [0x00400280] sltu $10, $8, $9                ; 250: sltu     $t2, $t0, $t1              ## test  part 1: sltu
15400003  // [0x00400284] bne $10, $0, 12 [STLU_PASS1-0x00400284]; 251: bne      $t2, $zero, STLU_PASS1
00000000  // [0x00400288] nop                             ; 252: sll      $zero, $zero, 0
0810015a  // [0x0040028c] j 0x00400568 [FAIL]             ; 253: j        FAIL
00000000  // [0x00400290] nop                             ; 254: sll      $zero, $zero, 0
0128502b  // [0x00400294] sltu $10, $9, $8                ; 257: sltu     $t2, $t1, $t0              ## test  part 2: sltu
11400003  // [0x00400298] beq $10, $0, 12 [STLU_PASS2-0x00400298]; 258: beq      $t2, $zero, STLU_PASS2
00000000  // [0x0040029c] nop                             ; 259: sll      $zero, $zero, 0
0810015a  // [0x004002a0] j 0x00400568 [FAIL]             ; 260: j        FAIL
00000000  // [0x004002a4] nop                             ; 261: sll      $zero, $zero, 0
22730001  // [0x004002a8] addi $19, $19, 1                ; 263: addi     $s3, $s3, 1
081000af  // [0x004002ac] j 0x004002bc [JALR_FORWARD]     ; 271: j        JALR_FORWARD
00000000  // [0x004002b0] nop                             ; 272: sll      $zero, $zero, 0
03e00008  // [0x004002b4] jr $31                          ; 275: jr       $ra
00000000  // [0x004002b8] nop                             ; 276: sll      $zero, $zero, 0
0c1000ad  // [0x004002bc] jal 0x004002b4 [JALR_BACK]      ; 279: jalr     JALR_BACK
00000000  // [0x004002c0] nop                             ; 280: sll      $zero, $zero, 0
22730001  // [0x004002c4] addi $19, $19, 1                ; 281: addi     $s3, $s3, 1
24084000  // [0x004002c8] addiu $8, $0, 16384             ; 288: addiu    $t0, $zero, 0x4000
00088022  // [0x004002cc] sub $16, $0, $8                 ; 289: sub      $s0, $0, $t0
02088022  // [0x004002d0] sub $16, $16, $8                ; 290: sub      $s0, $s0, $t0    # $s0 should now contain 0xffffc000
02088022  // [0x004002d4] sub $16, $16, $8                ; 291: sub      $s0, $s0, $t0    # $s0 should now contain 0xffff8000
02088022  // [0x004002d8] sub $16, $16, $8                ; 292: sub      $s0, $s0, $t0    # $s0 should now contain 0xffff0000
20114000  // [0x004002dc] addi $17, $0, 16384             ; 294: addi     $s1, $0,0x4000
02318820  // [0x004002e0] add $17, $17, $17               ; 295: add      $s1, $s1, $s1    #0x08000
02318820  // [0x004002e4] add $17, $17, $17               ; 296: add      $s1, $s1, $s1    #0x10000
02318820  // [0x004002e8] add $17, $17, $17               ; 297: add      $s1, $s1, $s1    #0x20000
02318820  // [0x004002ec] add $17, $17, $17               ; 298: add      $s1, $s1, $s1    #0x40000
02318820  // [0x004002f0] add $17, $17, $17               ; 299: add      $s1, $s1, $s1    #0x80000
02318820  // [0x004002f4] add $17, $17, $17               ; 300: add      $s1, $s1, $s1    #0x100000
02318820  // [0x004002f8] add $17, $17, $17               ; 301: add      $s1, $s1, $s1    #0x200000
02318820  // [0x004002fc] add $17, $17, $17               ; 302: add      $s1, $s1, $s1    #0x400000
02318820  // [0x00400300] add $17, $17, $17               ; 303: add      $s1, $s1, $s1    #0x800000
02318820  // [0x00400304] add $17, $17, $17               ; 304: add      $s1, $s1, $s1    #0x1000000
02318820  // [0x00400308] add $17, $17, $17               ; 305: add      $s1, $s1, $s1    #0x2000000
02318820  // [0x0040030c] add $17, $17, $17               ; 306: add      $s1, $s1, $s1 
02318820  // [0x00400310] add $17, $17, $17               ; 307: add      $s1, $s1, $s1    #0x8000000
02318820  // [0x00400314] add $17, $17, $17               ; 308: add      $s1, $s1, $s1    #0x10000000
20080048  // [0x00400318] addi $8, $0, 72                 ; 311: addi     $t0, $0,0x48      
ae280000  // [0x0040031c] sw $8, 0($17)                   ; 312: sw       $t0, 0($s1)       # 'H' store word
20090065  // [0x00400320] addi $9, $0, 101                ; 313: addi     $t1, $0,0x65      
ae290004  // [0x00400324] sw $9, 4($17)                   ; 314: sw       $t1, 4($s1)       # 'e' store word
200a006c  // [0x00400328] addi $10, $0, 108               ; 315: addi     $t2, $0,0x6C      
ae2a0008  // [0x0040032c] sw $10, 8($17)                  ; 316: sw       $t2, 8($s1)       # 'l' store word
ae2a000c  // [0x00400330] sw $10, 12($17)                 ; 317: sw       $t2, 12($s1)      # 'l' store word
200b006f  // [0x00400334] addi $11, $0, 111               ; 318: addi     $t3, $0,0x6F      
ae2b0010  // [0x00400338] sw $11, 16($17)                 ; 319: sw       $t3, 16($s1)      # 'o'store word
8e2c0000  // [0x0040033c] lw $12, 0($17)                  ; 321: lw       $t4, 0($s1)       # 'e' load word
00000000  // [0x00400340] nop                             ; 322: sll      $zero, $zero, 0
15880088  // [0x00400344] bne $12, $8, 544 [FAIL-0x00400344]; 323: bne      $t4, $t0, FAIL
00000000  // [0x00400348] nop                             ; 324: sll      $zero, $zero, 0
8e2c0004  // [0x0040034c] lw $12, 4($17)                  ; 325: lw       $t4, 4($s1)       # 'e' load word
00000000  // [0x00400350] nop                             ; 326: sll      $zero, $zero, 0
15890084  // [0x00400354] bne $12, $9, 528 [FAIL-0x00400354]; 327: bne      $t4, $t1, FAIL
00000000  // [0x00400358] nop                             ; 328: sll      $zero, $zero, 0
8e2c0008  // [0x0040035c] lw $12, 8($17)                  ; 329: lw       $t4, 8($s1)       # 'l' load word
00000000  // [0x00400360] nop                             ; 330: sll      $zero, $zero, 0
158a0080  // [0x00400364] bne $12, $10, 512 [FAIL-0x00400364]; 331: bne      $t4, $t2, FAIL
00000000  // [0x00400368] nop                             ; 332: sll      $zero, $zero, 0
8e2c000c  // [0x0040036c] lw $12, 12($17)                 ; 333: lw       $t4, 12($s1)      # 'l' load word
00000000  // [0x00400370] nop                             ; 334: sll      $zero, $zero, 0
158a007c  // [0x00400374] bne $12, $10, 496 [FAIL-0x00400374]; 335: bne      $t4, $t2, FAIL
00000000  // [0x00400378] nop                             ; 336: sll      $zero, $zero, 0
8e2c0010  // [0x0040037c] lw $12, 16($17)                 ; 337: lw       $t4, 16($s1)      # 'o' load word
00000000  // [0x00400380] nop                             ; 338: sll      $zero, $zero, 0
158b0078  // [0x00400384] bne $12, $11, 480 [FAIL-0x00400384]; 339: bne      $t4, $t3, FAIL
00000000  // [0x00400388] nop                             ; 340: sll      $zero, $zero, 0
22730002  // [0x0040038c] addi $19, $19, 2                ; 343: addi     $s3, $s3, 2
34081337  // [0x00400390] ori $8, $0, 4919                ; 349: ori      $t0, $0,0x1337       # '1337'
ae280000  // [0x00400394] sw $8, 0($17)                   ; 350: sw       $t0, 0($s1)          # store word
3408cafe  // [0x00400398] ori $8, $0, -13570              ; 351: ori      $t0, $0,0xCAFE       # 'CAFE'
ae280004  // [0x0040039c] sw $8, 4($17)                   ; 352: sw       $t0, 4($s1)          # store word
34080bad  // [0x004003a0] ori $8, $0, 2989                ; 353: ori      $t0, $0,0x0BAD       # '0BAD'
ae280008  // [0x004003a4] sw $8, 8($17)                   ; 354: sw       $t0, 8($s1)          # store word
3408f00d  // [0x004003a8] ori $8, $0, -4083               ; 355: ori      $t0, $0,0xF00D       # 'F00D'
ae28000c  // [0x004003ac] sw $8, 12($17)                  ; 356: sw       $t0, 12($s1)         # store word
34081111  // [0x004003b0] ori $8, $0, 4369                ; 358: ori      $t0, $zero, 0x1111
34091111  // [0x004003b4] ori $9, $0, 4369                ; 359: ori      $t1, $zero, 0x1111
340a1111  // [0x004003b8] ori $10, $0, 4369               ; 360: ori      $t2, $zero, 0x1111
340b1111  // [0x004003bc] ori $11, $0, 4369               ; 361: ori      $t3, $zero, 0x1111
340c1111  // [0x004003c0] ori $12, $0, 4369               ; 362: ori      $t4, $zero, 0x1111
340d1111  // [0x004003c4] ori $13, $0, 4369               ; 363: ori      $t5, $zero, 0x1111
340e1111  // [0x004003c8] ori $14, $0, 4369               ; 364: ori      $t6, $zero, 0x1111
340f1111  // [0x004003cc] ori $15, $0, 4369               ; 365: ori      $t7, $zero, 0x1111
92280000  // [0x004003d0] lbu $8, 0($17)                  ; 367: lbu      $t0, 0($s1)                ## needs 3 cycles to complete
00000000  // [0x004003d4] nop                             ; 368: sll      $zero, $zero, 0
34040037  // [0x004003d8] ori $4, $0, 55                  ; 369: ori      $a0, $zero, 0x0037
15040062  // [0x004003dc] bne $8, $4, 392 [FAIL-0x004003dc]; 370: bne      $t0, $a0, FAIL
00000000  // [0x004003e0] nop                             ; 371: sll      $zero, $zero, 0
92290004  // [0x004003e4] lbu $9, 4($17)                  ; 372: lbu      $t1, 4($s1) 
00000000  // [0x004003e8] nop                             ; 373: sll      $zero, $zero, 0
340400fe  // [0x004003ec] ori $4, $0, 254                 ; 374: ori      $a0, $zero, 0x00FE
1524005d  // [0x004003f0] bne $9, $4, 372 [FAIL-0x004003f0]; 375: bne      $t1, $a0, FAIL
00000000  // [0x004003f4] nop                             ; 376: sll      $zero, $zero, 0
922a0008  // [0x004003f8] lbu $10, 8($17)                 ; 377: lbu      $t2, 8($s1)
00000000  // [0x004003fc] nop                             ; 378: sll      $zero, $zero, 0
340400ad  // [0x00400400] ori $4, $0, 173                 ; 379: ori      $a0, $zero, 0x00AD
15440058  // [0x00400404] bne $10, $4, 352 [FAIL-0x00400404]; 380: bne      $t2, $a0, FAIL 
00000000  // [0x00400408] nop                             ; 381: sll      $zero, $zero, 0
922b000c  // [0x0040040c] lbu $11, 12($17)                ; 382: lbu      $t3, 12($s1) 
00000000  // [0x00400410] nop                             ; 383: sll      $zero, $zero, 0
3404000d  // [0x00400414] ori $4, $0, 13                  ; 384: ori      $a0, $zero, 0x000D
15640053  // [0x00400418] bne $11, $4, 332 [FAIL-0x00400418]; 385: bne      $t3, $a0, FAIL
00000000  // [0x0040041c] nop                             ; 386: sll      $zero, $zero, 0
22730001  // [0x00400420] addi $19, $19, 1                ; 388: addi     $s3, $s3, 1
82280000  // [0x00400424] lb $8, 0($17)                   ; 393: lb       $t0, 0($s1)                ## needs 3 cycles to complete
00000000  // [0x00400428] nop                             ; 394: sll      $zero, $zero, 0
34040037  // [0x0040042c] ori $4, $0, 55                  ; 395: ori      $a0, $zero, 0x0037
1504004d  // [0x00400430] bne $8, $4, 308 [FAIL-0x00400430]; 396: bne      $t0, $a0, FAIL
00000000  // [0x00400434] nop                             ; 397: sll      $zero, $zero, 0
82290004  // [0x00400438] lb $9, 4($17)                   ; 398: lb       $t1, 4($s1) 
00000000  // [0x0040043c] nop                             ; 399: sll      $zero, $zero, 0
3404ffff  // [0x00400440] ori $4, $0, -1                  ; 400: ori      $a0, $zero, 0xFFFF
00042400  // [0x00400444] sll $4, $4, 16                  ; 401: sll      $a0, $a0, 16
3484fffe  // [0x00400448] ori $4, $4, -2                  ; 402: ori      $a0, $a0, 0xFFFE
15240046  // [0x0040044c] bne $9, $4, 280 [FAIL-0x0040044c]; 403: bne      $t1, $a0, FAIL
00000000  // [0x00400450] nop                             ; 404: sll      $zero, $zero, 0
822a0008  // [0x00400454] lb $10, 8($17)                  ; 405: lb       $t2, 8($s1)
00000000  // [0x00400458] nop                             ; 406: sll      $zero, $zero, 0
3404ffff  // [0x0040045c] ori $4, $0, -1                  ; 407: ori      $a0, $zero, 0xFFFF
00042400  // [0x00400460] sll $4, $4, 16                  ; 408: sll      $a0, $a0, 16
3484ffad  // [0x00400464] ori $4, $4, -83                 ; 409: ori      $a0, $a0, 0xFFAD
1544003f  // [0x00400468] bne $10, $4, 252 [FAIL-0x00400468]; 410: bne      $t2, $a0, FAIL 
00000000  // [0x0040046c] nop                             ; 411: sll      $zero, $zero, 0
822b000c  // [0x00400470] lb $11, 12($17)                 ; 412: lb       $t3, 12($s1) 
00000000  // [0x00400474] nop                             ; 413: sll      $zero, $zero, 0
3404000d  // [0x00400478] ori $4, $0, 13                  ; 414: ori     $a0, $zero, 0x000D
1564003a  // [0x0040047c] bne $11, $4, 232 [FAIL-0x0040047c]; 415: bne      $t3, $a0, FAIL
00000000  // [0x00400480] nop                             ; 416: sll      $zero, $zero, 0
22730001  // [0x00400484] addi $19, $19, 1                ; 418: addi     $s3, $s3, 1
20082222  // [0x00400488] addi $8, $0, 8738               ; 423: addi     $t0, $zero, 0x2222
20092222  // [0x0040048c] addi $9, $0, 8738               ; 424: addi     $t1, $zero, 0x2222
200a2222  // [0x00400490] addi $10, $0, 8738              ; 425: addi     $t2, $zero, 0x2222
200b2222  // [0x00400494] addi $11, $0, 8738              ; 426: addi     $t3, $zero, 0x2222
200c2222  // [0x00400498] addi $12, $0, 8738              ; 427: addi     $t4, $zero, 0x2222
200d2222  // [0x0040049c] addi $13, $0, 8738              ; 428: addi     $t5, $zero, 0x2222
200e2222  // [0x004004a0] addi $14, $0, 8738              ; 429: addi     $t6, $zero, 0x2222
200f2222  // [0x004004a4] addi $15, $0, 8738              ; 430: addi     $t7, $zero, 0x2222
96280000  // [0x004004a8] lhu $8, 0($17)                  ; 432: lhu      $t0, 0($s1)                ## needs 3 cycles to complete
00000000  // [0x004004ac] nop                             ; 433: sll      $zero, $zero, 0
34041337  // [0x004004b0] ori $4, $0, 4919                ; 434: ori     $a0, $zero, 0x1337
1504002c  // [0x004004b4] bne $8, $4, 176 [FAIL-0x004004b4]; 435: bne      $t0, $a0, FAIL
00000000  // [0x004004b8] nop                             ; 436: sll      $zero, $zero, 0
96290004  // [0x004004bc] lhu $9, 4($17)                  ; 437: lhu      $t1, 4($s1) 
00000000  // [0x004004c0] nop                             ; 438: sll      $zero, $zero, 0
3404cafe  // [0x004004c4] ori $4, $0, -13570              ; 439: ori     $a0, $zero, 0xCAFE
15240027  // [0x004004c8] bne $9, $4, 156 [FAIL-0x004004c8]; 440: bne      $t1, $a0, FAIL
00000000  // [0x004004cc] nop                             ; 441: sll      $zero, $zero, 0
962a0008  // [0x004004d0] lhu $10, 8($17)                 ; 442: lhu      $t2, 8($s1)
00000000  // [0x004004d4] nop                             ; 443: sll      $zero, $zero, 0
34040bad  // [0x004004d8] ori $4, $0, 2989                ; 444: ori     $a0, $zero, 0x0BAD
15440022  // [0x004004dc] bne $10, $4, 136 [FAIL-0x004004dc]; 445: bne      $t2, $a0, FAIL 
00000000  // [0x004004e0] nop                             ; 446: sll      $zero, $zero, 0
962b000c  // [0x004004e4] lhu $11, 12($17)                ; 447: lhu      $t3, 12($s1) 
00000000  // [0x004004e8] nop                             ; 448: sll      $zero, $zero, 0
3404f00d  // [0x004004ec] ori $4, $0, -4083               ; 449: ori     $a0, $zero, 0xF00D
1564001d  // [0x004004f0] bne $11, $4, 116 [FAIL-0x004004f0]; 450: bne      $t3, $a0, FAIL
00000000  // [0x004004f4] nop                             ; 451: sll      $zero, $zero, 0
22730001  // [0x004004f8] addi $19, $19, 1                ; 453: addi     $s3, $s3, 1
86280000  // [0x004004fc] lh $8, 0($17)                   ; 458: lh       $t0, 0($s1)                ## needs 3 cycles to complete
00000000  // [0x00400500] nop                             ; 459: sll      $zero, $zero, 0
34041337  // [0x00400504] ori $4, $0, 4919                ; 460: ori      $a0, $zero, 0x1337
15040017  // [0x00400508] bne $8, $4, 92 [FAIL-0x00400508]; 461: bne      $t0, $a0, FAIL
00000000  // [0x0040050c] nop                             ; 462: sll      $zero, $zero, 0
86290004  // [0x00400510] lh $9, 4($17)                   ; 463: lh       $t1, 4($s1) 
00000000  // [0x00400514] nop                             ; 464: sll      $zero, $zero, 0
3404ffff  // [0x00400518] ori $4, $0, -1                  ; 465: ori      $a0, $zero, 0xFFFF
00042400  // [0x0040051c] sll $4, $4, 16                  ; 466: sll      $a0, $a0, 16
3484cafe  // [0x00400520] ori $4, $4, -13570              ; 467: ori      $a0, $a0, 0xCAFE
15240010  // [0x00400524] bne $9, $4, 64 [FAIL-0x00400524]; 468: bne      $t1, $a0, FAIL
00000000  // [0x00400528] nop                             ; 469: sll      $zero, $zero, 0
862a0008  // [0x0040052c] lh $10, 8($17)                  ; 470: lh       $t2, 8($s1)
00000000  // [0x00400530] nop                             ; 471: sll      $zero, $zero, 0
34040bad  // [0x00400534] ori $4, $0, 2989                ; 472: ori      $a0, $zero, 0x0BAD
1544000b  // [0x00400538] bne $10, $4, 44 [FAIL-0x00400538]; 473: bne      $t2, $a0, FAIL 
00000000  // [0x0040053c] nop                             ; 474: sll      $zero, $zero, 0
862b000c  // [0x00400540] lh $11, 12($17)                 ; 475: lh       $t3, 12($s1) 
00000000  // [0x00400544] nop                             ; 476: sll      $zero, $zero, 0
3404ffff  // [0x00400548] ori $4, $0, -1                  ; 477: ori      $a0, $zero, 0xFFFF
00042400  // [0x0040054c] sll $4, $4, 16                  ; 478: sll      $a0, $a0, 16
3484f00d  // [0x00400550] ori $4, $4, -4083               ; 479: ori      $a0, $a0, 0xF00D
15640004  // [0x00400554] bne $11, $4, 16 [FAIL-0x00400554]; 480: bne      $t3, $a0, FAIL
00000000  // [0x00400558] nop                             ; 481: sll      $zero, $zero, 0
22730001  // [0x0040055c] addi $19, $19, 1                ; 483: addi     $s3, $s3, 1
22730001  // [0x00400560] addi $19, $19, 1                ; 485: addi     $s3, $s3, 1
0810015f  // [0x00400564] j 0x0040057c [ALL_PASSED]       ; 490: j     ALL_PASSED
3410dead  // [0x00400568] ori $16, $0, -8531              ; 494: ori      $s0, $zero, 0xDEAD
3411beef  // [0x0040056c] ori $17, $0, -16657             ; 495: ori      $s1, $zero, 0xBEEF
20190001  // [0x00400570] addi $25, $0, 1                 ; 496: addi     $25, $zero, 1              ## indicate end of test bench
08100162  // [0x00400574] j 0x00400588 [DONE]             ; 497: j        DONE
00000000  // [0x00400578] nop                             ; 498: sll      $zero, $zero, 0
3410600d  // [0x0040057c] ori $16, $0, 24589              ; 501: ori     $s0, $zero, 0x600D
3411beef  // [0x00400580] ori $17, $0, -16657             ; 502: ori     $s1, $zero, 0xBEEF
20190001  // [0x00400584] addi $25, $0, 1                 ; 503: addi    $25, $zero, 1              ## indicate end of test bench
